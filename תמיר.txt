1. in the main create new motor
2.  copy the function setenable to motor class
3. copy the function onallcomplete to motor class
4. create new function called move2 in motor




public void move2(MoveDirections way, Double distance, boolean wait) throws InterruptedException {
        setState(MovementState.MOVING);
        moveDirection = way;
        double angle = 0.0;
	complete = false

        boolean smooth = false;
        switch (way) {
            case ROTATE_CW:
                velocities = velocity*0.8;
                speeds = 1.0;
                break;
            case ROTATE_CCW:
                velocities = velocity*0.8;
                speeds = -1.0;
                break;
        }

        drv.SetDirection(speeds > 0);
        
	if (Math.abs(speeds) > 0.0000001) {
                drv.move(Math.abs(speeds), velocities, distance, smooth, new Motor.MotorAdvCallback() { // i remove the "i" from here need to remove from motor move.
                    @Override
                    public boolean stop() {
                        return engineCallbacks.getEmergencyStop() || !condition.Condition();
                    }

                    @Override
                    public void OnComplete( long totalSteps, int totalDelay, double velocity) { // i remove the whellindex from here need to remove from motor move.
                    @Override.
                        OnAllComplete(totalSteps, totalDelay, velocity);
                    }
                });
            } else {
                complete = true;
            }
   
        if (wait) {
            while (getMovementState() == MovementState.MOVING) {
                Thread.sleep(10);
            }
        };
    }

5. power the function move2 on my motor.